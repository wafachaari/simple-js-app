let pokemonRepository = (function() {
  let e = [],
    t = 'https://pokeapi.co/api/v2/pokemon/?limit=50',
    n = document.querySelector('.search');
  function o(t) {
    'object' == typeof t && 'name' in t
      ? (e.push(t), console.log('a new pokemon added'))
      : console.log('this is not an object');
  }
  function l(e, t, n, o) {
    let l = document.querySelector('.modal-body'),
      i = document.querySelector('.modal-title');
    document.querySelector('.modal-header');
    (l.innerHTML = ''), (i.innerText = e);
    let a = document.createElement('img');
    a.classList.add('modal-image'), a.setAttribute('src', t), l.appendChild(
      a,
    ), a.classList.add('img-fluid'), a.classList.add('mx-1');
    let c = document.createElement('table');
    l.appendChild(c);
    let d = document.createElement('tbody');
    c.appendChild(d);
    let r = document.createElement('tr');
    d.appendChild(r);
    let s = document.createElement('tr');
    d.appendChild(s);
    let u = document.createElement('th');
    (u.innerHTML = 'Types:'), r.appendChild(u), n.forEach(function(e) {
      let t = document.createElement('td');
      (t.innerHTML = e.type.name), r.appendChild(t);
    });
    let m = document.createElement('th');
    (m.innerHTML = 'Height:'), s.appendChild(m);
    let p = document.createElement('td');
    (p.innerHTML = o), s.appendChild(p);
  }
  function i(e) {
    let t = e.detailsUrl;
    return fetch(t)
      .then(function(e) {
        return e.json();
      })
      .then(function(e) {
        return [e.sprites.front_default, e.types, e.height];
      })
      .catch(function(e) {
        console.log(e);
      });
  }
  return n.addEventListener('input', function() {
    let e = document.querySelector('.pokemon-list');
    const t = e.querySelectorAll('li');
    let o = n.value.toUpperCase();
    t.forEach(function(t) {
      console.log(
        typeof e,
      ), console.log(typeof t.innerText), console.log(t.innerText), t.innerText.toUpperCase().indexOf(o) > -1 ? (console.log(t.innerText.toUpperCase().indexOf(o)), (t.style.display = '')) : (t.style.display = 'none');
    });
  }), {
    add: o,
    getAll: function() {
      return e;
    },
    addListItem: function(e) {
      let t = document.querySelector('.pokemon-list'),
        n = document.createElement('li'),
        o = document.createElement('button');
      (o.innerText = e.name), n.classList.add('col-6'), n.classList.add(
        'col-md-4',
      ), o.classList.add('btn'), o.classList.add('btn-light'), o.classList.add(
        'btn-primary',
      ), o.setAttribute('data-target', '#pokemon-modal'), o.setAttribute(
        'data-toggle',
        'modal',
      ), o.setAttribute('data-bs-name', e.name), n.appendChild(
        o,
      ), t.appendChild(n), o.addEventListener('click', function(t) {
        !(function(e) {
          i(e).then(function(t) {
            l(e.name, t[0], t[1], t[2]);
          });
        })(e);
      });
    },
    loadList: function() {
      return fetch(t)
        .then(function(e) {
          return e.json();
        })
        .then(function(e) {
          e.results.forEach(function(e) {
            o({name: e.name, detailsUrl: e.url});
          });
        })
        .catch(function(e) {
          console.error(e);
        });
    },
    loadDetails: i,
    showModal: l,
  };
})(),
  displayPokemon = function() {
    pokemonRepository
      .loadList()
      .then(function() {
        pokemonRepository
          .getAll()
          .forEach(e => pokemonRepository.addListItem(e));
      })
      .catch(function(e) {
        console.log(e);
      });
  };
displayPokemon();
